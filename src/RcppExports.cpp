// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// compute_grad_eigen_fast
Eigen::VectorXd compute_grad_eigen_fast(const Eigen::MatrixXd& W, const Eigen::MatrixXd& H, const Eigen::MatrixXd& B, double sigma, const Eigen::VectorXd& lambda, double gamma);
RcppExport SEXP _DICEPRO_compute_grad_eigen_fast(SEXP WSEXP, SEXP HSEXP, SEXP BSEXP, SEXP sigmaSEXP, SEXP lambdaSEXP, SEXP gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type H(HSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type gamma(gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_grad_eigen_fast(W, H, B, sigma, lambda, gamma));
    return rcpp_result_gen;
END_RCPP
}
// compute_obj_term1_eigen_fast
double compute_obj_term1_eigen_fast(const Eigen::MatrixXd& W, const Eigen::MatrixXd& H, const Eigen::MatrixXd& B, double sigma);
RcppExport SEXP _DICEPRO_compute_obj_term1_eigen_fast(SEXP WSEXP, SEXP HSEXP, SEXP BSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type W(WSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type H(HSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type B(BSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(compute_obj_term1_eigen_fast(W, H, B, sigma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DICEPRO_compute_grad_eigen_fast", (DL_FUNC) &_DICEPRO_compute_grad_eigen_fast, 6},
    {"_DICEPRO_compute_obj_term1_eigen_fast", (DL_FUNC) &_DICEPRO_compute_obj_term1_eigen_fast, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_DICEPRO(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
