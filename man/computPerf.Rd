% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metrics.R
\name{computPerf}
\alias{computPerf}
\title{Compute Performance Metrics for Comparing Two Data Matrices}
\usage{
computPerf(
  x,
  y,
  metric,
  method = "sd",
  transformation = "none",
  trans_function = "none"
)
}
\arguments{
\item{x}{A matrix of values (e.g., cell type proportions from iteration i)}

\item{y}{A matrix of values (e.g., cell type proportions from iteration i+1)}

\item{metric}{A character string specifying the metric to compute:
"NRMSE" for Normalized Root Mean Square Error or
"R2" for R-squared}

\item{method}{Character string specifying the normalization method for NRMSE:
"sd" (standard deviation), "mean", "maxmin" (range), or "iq" (interquartile range)}

\item{transformation}{Character string specifying data transformation for NRMSE:
"none", "sqrt", "4thrt", "log", "log10", "log2", "log1p", "arcsine", or "other"}

\item{trans_function}{Character string specifying custom transformation function
(required when transformation = "other")}
}
\value{
A numeric value representing the computed performance metric
}
\description{
This function computes performance metrics to compare two data matrices.
It calculates either Normalized Root Mean Square Error (NRMSE) or
R-squared (R2) based on the specified metric.
}
\details{
For NRMSE: Uses the nrmse function with specified parameters
For R2: Uses the r2_1dim function
}
\examples{
if(interactive()){
  x <- matrix(rnorm(50), ncol = 5)
  y <- matrix(rnorm(50), ncol = 5)
  colnames(x) <- colnames(y) <- paste0("C_", 1:5)
  result <- computPerf(x, y, "NRMSE")
}

}
